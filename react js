int main()
 {
	//code
	int t;
	cin >>t;
	while (t--){
	    string s;
	    cin >> s;
	    int n = s.length();
	    bool dp[n][n]={0};
	    for (int i = 0;i<n;i++){
	        dp[i][i] = 1;
	    }
	    for (int i = 1;i<n;i++){
	        dp[i-1][i] = (s[i-1]==s[i]);
	    }
	    for (int i = 2;i< n; i++){
	        dp[i][i] = 1;
	        for (int j = 0,k=i; k< n;j++, k++){
	            
	                dp[j][k] = ((s[k]==s[j])&&(dp[j+1][k-1]));
	            
	        }
	    }
	   
	    int ans[n];
	    for (int i = 0;i<n;i++){
	        if(dp[0][i]==1){
	            ans[i] = 0;
	        } else {
	            ans[i] = INT_MAX;
	            for (int j=0;j<i;j++){
	                if(dp[j+1][i]){
	                    ans[i] = min(ans[i],(ans[j]+1));
	                }
	            }
	        }
	    }
	    //for (int i = 0;i<n;i++) cout<<ans[i]<<" ";
	    cout<<ans[n-1]<<endl;
	}
	return 0;
}
